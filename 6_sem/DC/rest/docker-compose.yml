version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: dc_zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dev

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: dc_kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: dc_zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://dc_kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - dev

  postgres:
    image: postgres:latest
    container_name: dc_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distcomp
    networks:
      - dev

  cassandra:
    image: cassandra:latest
    container_name: dc_cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: "distcomp"
      CASSANDRA_NUM_TOKENS: 256
      MAX_HEAP_SIZE: "512M"
      HEAP_NEWSIZE: "100M"
    networks:
      - dev

  redis:
    image: redis:latest
    container_name: dc_redis
    ports:
      - "6379:6379"
    networks:
      - dev

  publisher:
    build:
      context: ./
      dockerfile: ./publisher/Dockerfile
    container_name: dc_publisher
    ports:
      - "24110:24110"
    depends_on:
      - kafka
      - postgres
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    networks:
      - dev

  discussion:
    build:
      context: ./
      dockerfile: ./discussion/Dockerfile
    container_name: dc_discussion
    ports:
      - "24130:24130"
    depends_on:
      - kafka
      - cassandra
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    networks:
      - dev

networks:
  dev:
    driver: bridge